name: Publish Docker image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 1 * *'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.9', '3.8', '3.7' ]
        poetry-version: [ '1.2.0' ]
        python-runtime: [ '', '-slim', '-alpine']
    steps:
      - name: ‚¨áÔ∏è Check out the repo
        uses: actions/checkout@v3
      -
        name: üê≥ Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: üê≥ Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      -
        name: ‚ö°Ô∏è Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üì¶ Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: soofgolan/poetry
          tags: |
            type=schedule,prefix={{branch}}-,pattern={{date 'YYYYMMDD'}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ matrix.python-version }}${{ matrix.python-runtime }}
          flavor: |
              latest=auto

      - name: üõ† Build and üöÄ Push Python ${{ matrix.python-version }}${{ matrix.python-runtime }} with poetry==${{ matrix.poetry-version }} Docker image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}${{ matrix.python-runtime }}
            POETRY_VERSION=${{ matrix.poetry-version }}
